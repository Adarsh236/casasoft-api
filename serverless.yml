service: casasoft-api-service

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-2
  apiName: casasoft-api
  environment:
    INGREDIENT_TABLE: ${self:custom.ingredientTableName}

custom:
  ingredientTableName: ingredient-table-${self:provider.stage}

plugins:
  - serverless-iam-roles-per-function

functions:
  getIngredientById:
    handler: src/api.getIngredientById
    name: get-ingredient-by-id
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: ingredient/{ingredientId}
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:GetItem"
        Resource: !GetAtt IngredientTable.Arn
  createIngredient:
    handler: src/api.createIngredient
    name: create-ingredient
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: ingredient
          method: POST
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:PutItem"
        Resource: !GetAtt IngredientTable.Arn
  updateIngredientById:
    handler: src/api.updateIngredientById
    name: update-ingredient-by-id
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: ingredient/{ingredientId}
          method: PUT
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:UpdateItem"
        Resource: !GetAtt IngredientTable.Arn
  deleteIngredientById:
    handler: src/api.deleteIngredientById
    name: delete-ingredient-by-id
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: ingredient/{ingredientId}
          method: DELETE
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:DeleteItem"
        Resource: !GetAtt IngredientTable.Arn
  findIngredients:
    handler: src/api.findIngredients
    name: find-ingredients
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: ingredient/find
          method: POST
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:Scan"
        Resource: !GetAtt IngredientTable.Arn

resources:
  Resources:
    IngredientTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.ingredientTableName}
        AttributeDefinitions:
          - AttributeName: ingredientId
            AttributeType: S
        KeySchema:
          - AttributeName: ingredientId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
